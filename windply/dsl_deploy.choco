# Create necessary directories
New-Item -Path C:\ -Name Temp -ItemType Directory -ErrorAction SilentlyContinue
New-Item -Path C:\ -Name Data -ItemType Directory -ErrorAction SilentlyContinue
New-Item -Path C:\Data -Name vms -ItemType Directory -ErrorAction SilentlyContinue
New-Item -Path "C:\data\vms\kali" -ItemType Directory -Force -ErrorAction SilentlyContinue

# Set environment variables
$env:TEMP = "C:\Temp"
$env:TMP = "C:\Temp"

# Remove unnecessary items
Remove-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run -Name bginfo -ErrorAction SilentlyContinue
Remove-Item C:\BGinfo\ -Recurse -Force -ErrorAction SilentlyContinue

# Create payloads directory
New-Item -Path C:\ -Name payloads -ItemType Directory -ErrorAction SilentlyContinue

# Configure Windows Defender
Add-MpPreference -ExclusionPath "C:\tools\"
Add-MpPreference -ExclusionPath "C:\payloads\"
$Downloads = Get-ItemPropertyValue 'HKCU:\software\microsoft\windows\currentversion\explorer\shell folders\' -Name '{374DE290-123F-4565-9164-39C4925E467B}'
Add-MpPreference -ExclusionPath $Downloads
Set-MpPreference -MAPSReporting Disabled
Set-MpPreference -SubmitSamplesConsent NeverSend

# Enable Chocolatey global confirmation
choco feature enable -n allowGlobalConfirmation

# Install necessary packages
choco install git
choco install vscode
choco install openjdk11
choco install sysinternals --params "/InstallDir:C:\tools\sysinternals"
choco install googlechrome --ignore-checksums
choco install 7zip
choco install putty
choco install notepadplusplus
choco install greenshot
choco install microsoft-windows-terminal
choco install vmwareworkstation
choco install vagrant
choco install vagrant-vmware-utility
choco install packer
choco install obsidian
choco install microsoft-office-deployment
choco install microsoftazurestorageexplorer
choco install python3

# Disable Hyper-V
Disable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-Hypervisor

# Vagrant setup
vagrant plugin install vagrant-vmware-desktop
vagrant box add kalilinux/rolling --provider vmware_desktop

# Set VMware default virtual machine path
$preferencesFile = "$env:APPDATA\VMware\preferences.ini"

function Set-VMwareDefaultVMPath {
    param (
        [string]$path
    )

    if (Test-Path $preferencesFile) {
        $content = Get-Content $preferencesFile

        if ($content -notmatch "prefvmx.defaultVMPath") {
            Add-Content $preferencesFile "prefvmx.defaultVMPath = `"$path`""
        } else {
            $content = $content -replace "prefvmx.defaultVMPath\s*=\s*.*", "prefvmx.defaultVMPath = `"$path`""
            Set-Content $preferencesFile $content
        }
    } else {
        New-Item -Path $preferencesFile -ItemType File -Force
        Add-Content $preferencesFile "prefvmx.defaultVMPath = `"$path`""
    }
}

# Change the default VM path
Set-VMwareDefaultVMPath -path "C:\data\vms"

# Create Vagrantfile for Kali VM
$vagrantfileContent = @'
Vagrant.configure("2") do |config|
  config.vm.box = "kalilinux/rolling"

  config.vm.provider "vmware_desktop" do |v|
    v.name = "Kali"
    v.memory = 4096  # Set the RAM to 4GB
  end

  # Provisioning with a shell script from GitHub
  config.vm.provision "shell", inline: <<-SHELL
    if [ ! -f /var/vagrant_provisioned ]; then
      apt-get update
      apt-get install -y curl
      curl -o /tmp/post-install.sh https://raw.githubusercontent.com/adcouch/kali/main/setup/custom_2.sh
      chmod +x /tmp/post-install.sh
      /tmp/post-install.sh
      touch /var/vagrant_provisioned
    fi
  SHELL
end
'@

$vagrantfilePath = "C:\data\vms\kali\Vagrantfile"
Set-Content -Path $vagrantfilePath -Value $vagrantfileContent

# Configure Internet Explorer first run settings
New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer"
New-Item -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Main"
New-ItemProperty -Path "HKLM:\SOFTWARE\Policies\Microsoft\Internet Explorer\Main" -Name DisableFirstRunCustomize -Value 1

# Install GPRegistryPolicy module
Install-Module GPRegistryPolicy -Force

# UI customisations
Import-Module "$env:ChocolateyInstall\helpers\chocolateyInstaller.psm1" -Force
Set-WindowsExplorerOptions -EnableShowFileExtensions -EnableShowFullPathInTitleBar -EnableExpandToOpenFolder -EnableShowRibbon
Install-ChocolateyShortcut -shortcutFilePath "C:\Users\Public\Desktop\tools.lnk" -targetPath C:\tools\

# Miscellaneous settings
$DesktopPath = [Environment]::GetFolderPath("Desktop")
Install-ChocolateyPinnedTaskBarItem "C:\Windows\system32\mstsc.exe"
Remove-Item -Path "C:\Users\Public\Desktop\Boxstarter Shell.lnk"
Remove-Item -Path "$DesktopPath\eula.lnk"
Remove-Item -Path "C:\Users\Public\Desktop\Visual Studio Code.lnk"
Remove-Item -Path C:\Temp\ -Recurse -Force
Install-WindowsUpdate -AcceptEula

# System hardening settings
New-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Windows NT\DNSClient" -Name EnableMulticast -Value 0
New-ItemProperty -Path "HKLM:\Software\Policies\Microsoft\Internet Explorer\Main" -Name NotifyDisableIEOptions -Value 1
New-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Cryptography\Wintrust\Config" -Name EnableCertPaddingCheck -Value 1
New-ItemProperty -Path "HKLM:\Software\Wow6432Node\Microsoft\Cryptography\Wintrust\Config" -Name EnableCertPaddingCheck -Value 1
New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name FeatureSettingsOverrideMask -Value 3
New-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" -Name FeatureSettingsOverride -Value 72
